// <auto-generated />
using System;
using Invictus.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Invictus.Data.Migrations
{
    [DbContext(typeof(InvictusDbContext))]
    [Migration("20220419050434_update41")]
    partial class update41
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Invictus.Domain.Administrativo.AlunoAggregate.Aluno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(11)");

                    b.Property<Guid>("ColaboradorRespCadastroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Nascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naturalidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NaturalidadeUF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeContatoReferencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeMae")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomePai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeSocial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelCelular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelReferencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelResidencial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelWhatsapp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.AlunoAggregate.AlunoDocumento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Analisado")
                        .HasColumnType("bit");

                    b.Property<string>("ClassificacaoDoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentArquivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("DataFile")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DocEnviado")
                        .HasColumnType("bit");

                    b.Property<Guid>("MatriculaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrazoValidade")
                        .HasColumnType("int");

                    b.Property<int>("Tamanho")
                        .HasColumnType("int");

                    b.Property<string>("TipoArquivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TurmaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Validado")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("AlunosDocumentos");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.AlunoAggregate.AlunoPlanoPagamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("BonusPontualidade")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MaterialGratuito")
                        .HasColumnType("bit");

                    b.Property<Guid>("MatriculaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Parcelas")
                        .HasColumnType("int");

                    b.Property<decimal>("TaxaMatricula")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.Property<decimal>("Valor")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.Property<decimal>("ValorMaterial")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.HasKey("Id");

                    b.ToTable("AlunosPlanoPagamento");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.Calendarios.Calendario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AulaConcluida")
                        .HasColumnType("bit");

                    b.Property<bool>("AulaIniciada")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateAulaConcluida")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateAulaIniciada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DiaAula")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiaDaSemana")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Editada")
                        .HasColumnType("bit");

                    b.Property<bool>("EhSubstituto")
                        .HasColumnType("bit");

                    b.Property<string>("HoraFinal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoraInicial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MateriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Observacoes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProfessorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SalaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TemReposicao")
                        .HasColumnType("bit");

                    b.Property<Guid>("TurmaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DiaAula");

                    b.ToTable("Calendarios");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.ColaboradorAggregate.AnotacaoColaborador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MatriculaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ColaboradoresAnotacoes");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.ColaboradorAggregate.Colaborador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(11)");

                    b.Property<Guid>("CargoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(12)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsColaborador")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProfessor")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Colaboradores");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.ContratoAggregate.Conteudo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ContratoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContratoId");

                    b.ToTable("ConteudoContratos");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.ContratosAggregate.Contrato", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CodigoContrato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PodeEditar")
                        .HasColumnType("bit");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TypePacoteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Contratos");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.DocumentacaoTemplateAggregate.DocumentacaoTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ValidadeDias")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Nome");

                    b.ToTable("DocumentacaoTemplate");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.Logs.LogBoletos", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<Guid>("BoletoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BoletoJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LogBoletos");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.Logs.LogCalendario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CalendarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ColaboradorID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Metodo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewCommand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldCommand")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LogCalendarios");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.Logs.LogLogin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("LogLogins");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.Logs.LogMatriculas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Command")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GuidColaborador")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MatriculaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("LogMatriculas");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.Logs.LogTurmas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateTurmaCommandJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GuidColaborador")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TurmaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("LogTurmas");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.Models.AgendaTrimestre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Fim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AgendasTrimestre");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.Models.MateriaTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("CargaHoraria")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Modalidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid>("TypePacoteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TypePacoteId");

                    b.ToTable("MateriasTemplate");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.Models.PlanoPagamentoTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<decimal>("BonusPontualidade")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.Property<Guid>("ContratoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MaterialGratuito")
                        .HasColumnType("bit");

                    b.Property<decimal>("TaxaMatricula")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.Property<Guid>("TypePacoteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Valor")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.Property<decimal>("ValorMaterial")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.HasKey("Id");

                    b.ToTable("PlanoPagamentoTemplate");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.Models.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodigoProduto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("NivelMinimo")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Observacoes")
                        .HasColumnType("nvarchar(400)");

                    b.Property<decimal>("Preco")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.Property<decimal>("PrecoCusto")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.Models.TypePacote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Nivel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypePacote");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.PacoteAggregate.DocumentacaoExigencia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ObrigatorioParaMatricula")
                        .HasColumnType("bit");

                    b.Property<Guid>("PacoteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Titular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ValidadeDias")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PacoteId");

                    b.ToTable("PacotesDocumentacao");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.PacoteAggregate.Pacote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalHoras")
                        .HasColumnType("int");

                    b.Property<Guid>("TypePacoteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Pacotes");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.PacoteAggregate.PacoteMateria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CargaHoraria")
                        .HasColumnType("int");

                    b.Property<Guid>("MateriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Modalidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ordem")
                        .HasColumnType("int");

                    b.Property<Guid>("PacoteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PacoteId");

                    b.ToTable("PacotesMaterias");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.Parametros.ParametrosKey", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ParametrosKey");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.Parametros.ParametrosValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ParametrosKeyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ParametrosKeyId");

                    b.ToTable("ParametrosValue");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.ProfessorAggregate.Disponibilidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Domingo")
                        .HasColumnType("bit");

                    b.Property<Guid>("PessoaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Quarta")
                        .HasColumnType("bit");

                    b.Property<bool>("Quinta")
                        .HasColumnType("bit");

                    b.Property<bool>("Sabado")
                        .HasColumnType("bit");

                    b.Property<bool>("Segunda")
                        .HasColumnType("bit");

                    b.Property<bool>("Sexta")
                        .HasColumnType("bit");

                    b.Property<bool>("Terca")
                        .HasColumnType("bit");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ProfessoresDisponibilidades");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.ProfessorAggregate.MateriaHabilitada", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PacoteMateriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProfessorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorId");

                    b.ToTable("ProfessoresMaterias");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.ProfessorAggregate.Professor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CNPJ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(12)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataEntrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataSaida")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeContato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefoneContato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Professores");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.RegistroMatricula.Matricula", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BolsaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ciencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CienciaAlunodId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ColaboradorResponsavelMatricula")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DiaMatricula")
                        .HasColumnType("datetime2");

                    b.Property<bool>("MatriculaConfirmada")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroMatricula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TurmaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Matriculas");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.TurmaAggregate.Horario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaSemanada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HorarioFim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HorarioInicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TurmaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TurmaId");

                    b.ToTable("TurmasHorarios");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.TurmaAggregate.Presenca", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CalendarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsPresent")
                        .HasColumnType("bit");

                    b.Property<string>("IsPresentToString")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TurmasPresencas");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.TurmaAggregate.Previsoes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("PrevisionEndingOne")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PrevisionEndingThree")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PrevisionEndingTwo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PrevisionStartOne")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PrevisionStartThree")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PrevisionStartTwo")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TurmaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TurmasPrevisoes");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.TurmaAggregate.Turma", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identificador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MinimoAlunos")
                        .HasColumnType("int");

                    b.Property<Guid>("PacoteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SalaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StatusAndamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalAlunos")
                        .HasColumnType("int");

                    b.Property<Guid>("TypePacoteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Turmas");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.TurmaAggregate.TurmaMaterias", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("CargaHoraria")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MateriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Modalidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProfessorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TurmaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TypePacoteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TurmaId");

                    b.ToTable("TurmasMaterias");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.TurmaAggregate.TurmaProfessor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProfessorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TurmaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TurmasProfessores");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.UnidadeAggregate.Sala", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("Capacidade")
                        .HasColumnType("int");

                    b.Property<string>("Comentarios")
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Descricao");

                    b.HasIndex("UnidadeId");

                    b.ToTable("UnidadesSalas");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.UnidadeAggregate.Unidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CNPJ")
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Sigla")
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("Id");

                    b.HasIndex("Sigla");

                    b.ToTable("Unidades");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.UnidadeAuth.Autorizacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Unidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Autorizacoes");
                });

            modelBuilder.Entity("Invictus.Domain.Financeiro.Boleto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CentroCustoUnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desconto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiasDesconto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DigitosCartao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormaPagamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Historico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InformacaoDebitoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Juros")
                        .HasColumnType("int");

                    b.Property<int>("JurosFixo")
                        .HasColumnType("int");

                    b.Property<string>("Multa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MultaFixo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ReparcelamentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ResponsavelCadastroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StatusBoleto")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SubConta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Valor")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.Property<decimal>("ValorPago")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.Property<DateTime>("Vencimento")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CentroCustoUnidadeId");

                    b.HasIndex("InformacaoDebitoId");

                    b.HasIndex("StatusBoleto");

                    b.ToTable("Boletos");
                });

            modelBuilder.Entity("Invictus.Domain.Financeiro.Bolsas.Bolsa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Colaborador")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataExpiracao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PercentualDesconto")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TypePacoteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Bolsas");
                });

            modelBuilder.Entity("Invictus.Domain.Financeiro.Caixa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BoletoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("HorarioTransacao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Caixa");
                });

            modelBuilder.Entity("Invictus.Domain.Financeiro.Fornecedores.Fornecedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CEP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CNPJ_CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IE_RG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logradouro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeContato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelContato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WhatsApp")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("Invictus.Domain.Financeiro.InformacaoDebito", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FornecedorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Historico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MatriculaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NumeroParcelas")
                        .HasColumnType("int");

                    b.Property<string>("Origem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusPagamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubConta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UnidadeCusto")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ValorTotal")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.HasKey("Id");

                    b.ToTable("InformacoesDebitos");
                });

            modelBuilder.Entity("Invictus.Domain.Financeiro.Reparcelado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ListBoletoReparceladoId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ListNewBoletoId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Reparcelados");
                });

            modelBuilder.Entity("Invictus.Domain.Padagogico.Estagio.DocumentoEstagio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Analisado")
                        .HasColumnType("bit");

                    b.Property<string>("ContentArquivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("DataFile")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MatriculaEstagioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoArquivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Validado")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("MatriculaEstagioId");

                    b.ToTable("EstagioDocumentos");
                });

            modelBuilder.Entity("Invictus.Domain.Padagogico.Estagio.Estagio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CEP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CNPJ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Logradouro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SupervisorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Vagas")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Estagios");
                });

            modelBuilder.Entity("Invictus.Domain.Padagogico.Estagio.MatriculaEstagio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EstagioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MatriculaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NumeroMatricula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EstagiosMatriculas");
                });

            modelBuilder.Entity("Invictus.Domain.Padagogico.Estagio.TypeEstagio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Nivel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeEstagio");
                });

            modelBuilder.Entity("Invictus.Domain.Padagogico.NotasTurmas.TurmaNotas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AvaliacaoDois")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvaliacaoTres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvaliacaoUm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MateriaDescricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MateriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MatriculaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Resultado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundaChamadaAvaliacaoDois")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundaChamadaAvaliacaoTres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundaChamadaAvaliacaoUm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TurmaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TurmasNotas");
                });

            modelBuilder.Entity("Invictus.Domain.Pedagogico.AlunoAggregate.AlunoAnotacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MatriculaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AlunosAnotacoes");
                });

            modelBuilder.Entity("Invictus.Domain.Pedagogico.Responsaveis.Responsavel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MatriculaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Nascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naturalidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NaturalidadeUF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parentesco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelCelular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelResidencial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelWhatsapp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TemRespFin")
                        .HasColumnType("bit");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Responsaveis");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.AlunoAggregate.Aluno", b =>
                {
                    b.OwnsOne("Invictus.Domain.Administrativo.AlunoAggregate.AlunoEndereco", "Endereco", b1 =>
                        {
                            b1.Property<Guid>("AlunoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Bairro")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Bairro");

                            b1.Property<string>("CEP")
                                .HasColumnType("nvarchar(8)")
                                .HasColumnName("CEP");

                            b1.Property<string>("Cidade")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Cidade");

                            b1.Property<string>("Complemento")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Complemento");

                            b1.Property<string>("Logradouro")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Logradouro");

                            b1.Property<string>("Numero")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Numero");

                            b1.Property<string>("UF")
                                .HasColumnType("nvarchar(2)")
                                .HasColumnName("UF");

                            b1.HasKey("AlunoId");

                            b1.ToTable("Alunos");

                            b1.WithOwner()
                                .HasForeignKey("AlunoId");
                        });

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.ColaboradorAggregate.Colaborador", b =>
                {
                    b.OwnsOne("Invictus.Domain.Administrativo.ColaboradorAggregate.ColaboradorEndereco", "Endereco", b1 =>
                        {
                            b1.Property<Guid>("ColaboradorId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Bairro")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Bairro");

                            b1.Property<string>("CEP")
                                .HasColumnType("nvarchar(8)")
                                .HasColumnName("CEP");

                            b1.Property<string>("Cidade")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Cidade");

                            b1.Property<string>("Complemento")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Complemento");

                            b1.Property<string>("Logradouro")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Logradouro");

                            b1.Property<string>("Numero")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Numero");

                            b1.Property<string>("UF")
                                .HasColumnType("nvarchar(2)")
                                .HasColumnName("UF");

                            b1.HasKey("ColaboradorId");

                            b1.ToTable("Colaboradores");

                            b1.WithOwner()
                                .HasForeignKey("ColaboradorId");
                        });

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.ContratoAggregate.Conteudo", b =>
                {
                    b.HasOne("Invictus.Domain.Administrativo.ContratosAggregate.Contrato", "Contrato")
                        .WithMany("Conteudos")
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contrato");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.PacoteAggregate.DocumentacaoExigencia", b =>
                {
                    b.HasOne("Invictus.Domain.Administrativo.PacoteAggregate.Pacote", "Pacote")
                        .WithMany("DocumentosExigidos")
                        .HasForeignKey("PacoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pacote");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.PacoteAggregate.PacoteMateria", b =>
                {
                    b.HasOne("Invictus.Domain.Administrativo.PacoteAggregate.Pacote", "Pacote")
                        .WithMany("Materias")
                        .HasForeignKey("PacoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pacote");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.Parametros.ParametrosValue", b =>
                {
                    b.HasOne("Invictus.Domain.Administrativo.Parametros.ParametrosKey", "ParametrosKey")
                        .WithMany("ParametrosValue")
                        .HasForeignKey("ParametrosKeyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParametrosKey");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.ProfessorAggregate.MateriaHabilitada", b =>
                {
                    b.HasOne("Invictus.Domain.Administrativo.ProfessorAggregate.Professor", "Professor")
                        .WithMany("Materias")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.ProfessorAggregate.Professor", b =>
                {
                    b.OwnsOne("Invictus.Domain.Administrativo.ProfessorAggregate.DadosBancarios", "DadosBancarios", b1 =>
                        {
                            b1.Property<Guid>("ProfessorId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Agencia")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Agencia");

                            b1.Property<string>("BancoNumero")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("BancoNumero");

                            b1.Property<string>("Conta")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Conta");

                            b1.Property<string>("TipoConta")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("TipoConta");

                            b1.HasKey("ProfessorId");

                            b1.ToTable("Professores");

                            b1.WithOwner()
                                .HasForeignKey("ProfessorId");
                        });

                    b.OwnsOne("Invictus.Domain.Administrativo.ProfessorAggregate.ProfessorEndereco", "Endereco", b1 =>
                        {
                            b1.Property<Guid>("ProfessorId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Bairro")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Bairro");

                            b1.Property<string>("CEP")
                                .HasColumnType("nvarchar(8)")
                                .HasColumnName("CEP");

                            b1.Property<string>("Cidade")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Cidade");

                            b1.Property<string>("Complemento")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Complemento");

                            b1.Property<string>("Logradouro")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Logradouro");

                            b1.Property<string>("Numero")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Numero");

                            b1.Property<string>("UF")
                                .HasColumnType("nvarchar(2)")
                                .HasColumnName("UF");

                            b1.HasKey("ProfessorId");

                            b1.ToTable("Professores");

                            b1.WithOwner()
                                .HasForeignKey("ProfessorId");
                        });

                    b.Navigation("DadosBancarios");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.TurmaAggregate.Horario", b =>
                {
                    b.HasOne("Invictus.Domain.Administrativo.TurmaAggregate.Turma", "Turma")
                        .WithMany("Horarios")
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.TurmaAggregate.Turma", b =>
                {
                    b.OwnsOne("Invictus.Domain.Administrativo.TurmaAggregate.Previsao", "Previsao", b1 =>
                        {
                            b1.Property<Guid>("TurmaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("DataCriacao")
                                .HasColumnType("datetime2")
                                .HasColumnName("DataCriacao");

                            b1.Property<DateTime>("PrevisaoAtual")
                                .HasColumnType("datetime2")
                                .HasColumnName("PrevisaoAtual");

                            b1.Property<string>("PrevisaoInfo")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("PrevisaoInfo");

                            b1.Property<DateTime>("PrevisaoTerminoAtual")
                                .HasColumnType("datetime2")
                                .HasColumnName("PrevisaoTerminoAtual");

                            b1.HasKey("TurmaId");

                            b1.ToTable("Turmas");

                            b1.WithOwner("Turma")
                                .HasForeignKey("TurmaId");

                            b1.Navigation("Turma");
                        });

                    b.Navigation("Previsao");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.TurmaAggregate.TurmaMaterias", b =>
                {
                    b.HasOne("Invictus.Domain.Administrativo.TurmaAggregate.Turma", "Turma")
                        .WithMany("Materias")
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.UnidadeAggregate.Sala", b =>
                {
                    b.HasOne("Invictus.Domain.Administrativo.UnidadeAggregate.Unidade", "Unidade")
                        .WithMany("Salas")
                        .HasForeignKey("UnidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unidade");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.UnidadeAggregate.Unidade", b =>
                {
                    b.OwnsOne("Invictus.Domain.Administrativo.UnidadeAggregate.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<Guid>("UnidadeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Bairro")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Bairro");

                            b1.Property<string>("CEP")
                                .HasColumnType("nvarchar(8)")
                                .HasColumnName("CEP");

                            b1.Property<string>("Cidade")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Cidade");

                            b1.Property<string>("Complemento")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Complemento");

                            b1.Property<string>("Logradouro")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Logradouro");

                            b1.Property<string>("Numero")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Numero");

                            b1.Property<string>("UF")
                                .HasColumnType("nvarchar(2)")
                                .HasColumnName("UF");

                            b1.HasKey("UnidadeId");

                            b1.ToTable("Unidades");

                            b1.WithOwner()
                                .HasForeignKey("UnidadeId");
                        });

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Invictus.Domain.Financeiro.Boleto", b =>
                {
                    b.HasOne("Invictus.Domain.Financeiro.InformacaoDebito", "InformacaoDebito")
                        .WithMany("Boletos")
                        .HasForeignKey("InformacaoDebitoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Invictus.Domain.Financeiro.BoletoResponseInfo", "InfoBoletos", b1 =>
                        {
                            b1.Property<Guid>("BoletoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Banco_numero")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Banco_numero");

                            b1.Property<string>("Credencial")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Credencial");

                            b1.Property<string>("Id_unico")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Id_unico");

                            b1.Property<string>("Id_unico_original")
                                .HasColumnType("nvarchar(8)")
                                .HasColumnName("Id_unico_original");

                            b1.Property<string>("LinhaDigitavel")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("LinhaDigitavel");

                            b1.Property<string>("LinkBoleto")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("LinkBoleto");

                            b1.Property<string>("LinkGrupo")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("LinkGrupo");

                            b1.Property<string>("Msg")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Msg");

                            b1.Property<string>("Nossonumero")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Nossonumero");

                            b1.Property<string>("Pedido_numero")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Pedido_numero");

                            b1.Property<string>("Status")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Status");

                            b1.Property<string>("Token_facilitador")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Token_facilitador");

                            b1.HasKey("BoletoId");

                            b1.ToTable("Boletos");

                            b1.WithOwner("Boleto")
                                .HasForeignKey("BoletoId");

                            b1.Navigation("Boleto");
                        });

                    b.Navigation("InfoBoletos");

                    b.Navigation("InformacaoDebito");
                });

            modelBuilder.Entity("Invictus.Domain.Padagogico.Estagio.DocumentoEstagio", b =>
                {
                    b.HasOne("Invictus.Domain.Padagogico.Estagio.MatriculaEstagio", "MatriculaEstagio")
                        .WithMany("Documentos")
                        .HasForeignKey("MatriculaEstagioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MatriculaEstagio");
                });

            modelBuilder.Entity("Invictus.Domain.Pedagogico.Responsaveis.Responsavel", b =>
                {
                    b.OwnsOne("Invictus.Domain.Pedagogico.Responsaveis.ResponsavelEndereco", "Endereco", b1 =>
                        {
                            b1.Property<Guid>("ResponsavelId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Bairro")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Bairro");

                            b1.Property<string>("CEP")
                                .HasColumnType("nvarchar(8)")
                                .HasColumnName("CEP");

                            b1.Property<string>("Cidade")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Cidade");

                            b1.Property<string>("Complemento")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Complemento");

                            b1.Property<string>("Logradouro")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Logradouro");

                            b1.Property<string>("Numero")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Numero");

                            b1.Property<string>("UF")
                                .HasColumnType("nvarchar(2)")
                                .HasColumnName("UF");

                            b1.HasKey("ResponsavelId");

                            b1.ToTable("Responsaveis");

                            b1.WithOwner()
                                .HasForeignKey("ResponsavelId");
                        });

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.ContratosAggregate.Contrato", b =>
                {
                    b.Navigation("Conteudos");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.PacoteAggregate.Pacote", b =>
                {
                    b.Navigation("DocumentosExigidos");

                    b.Navigation("Materias");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.Parametros.ParametrosKey", b =>
                {
                    b.Navigation("ParametrosValue");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.ProfessorAggregate.Professor", b =>
                {
                    b.Navigation("Materias");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.TurmaAggregate.Turma", b =>
                {
                    b.Navigation("Horarios");

                    b.Navigation("Materias");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.UnidadeAggregate.Unidade", b =>
                {
                    b.Navigation("Salas");
                });

            modelBuilder.Entity("Invictus.Domain.Financeiro.InformacaoDebito", b =>
                {
                    b.Navigation("Boletos");
                });

            modelBuilder.Entity("Invictus.Domain.Padagogico.Estagio.MatriculaEstagio", b =>
                {
                    b.Navigation("Documentos");
                });
#pragma warning restore 612, 618
        }
    }
}
