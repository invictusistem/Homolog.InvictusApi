// <auto-generated />
using System;
using Invictus.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Invictus.Data.Migrations
{
    [DbContext(typeof(InvictusDbContext))]
    [Migration("20211114192733_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Invictus.Domain.Administrativo.ColaboradorAggregate.Colaborador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(11)");

                    b.Property<Guid>("CargoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(12)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Colaboradores");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.ContratoAggregate.Conteudo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ContratoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContratoId");

                    b.ToTable("ConteudoContratos");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.ContratosAggregate.Contrato", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CodigoContrato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PodeEditar")
                        .HasColumnType("bit");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TypePacoteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Contratos");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.DocumentacaoTemplateAggregate.DocumentacaoTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ValidadeDias")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Nome");

                    b.ToTable("DocumentacaoTemplate");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.Models.AgendaTrimestre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Fim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AgendasTrimestre");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.Models.MateriaTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("CargaHoraria")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Modalidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid>("TypePacoteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TypePacoteId");

                    b.ToTable("MateriasTemplate");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.Models.PlanoPagamentoTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<decimal>("BonusPontualidade")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.Property<Guid>("ContratoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MaterialGratuito")
                        .HasColumnType("bit");

                    b.Property<decimal>("TaxaMatricula")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.Property<Guid>("TypePacoteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Valor")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.HasKey("Id");

                    b.ToTable("PlanoPagamentoTemplate");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.Models.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodigoProduto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("NivelMinimo")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Observacoes")
                        .HasColumnType("nvarchar(400)");

                    b.Property<decimal>("Preco")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.Property<decimal>("PrecoCusto")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.Models.TypePacote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Nivel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypePacote");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.PacoteAggregate.DocumentacaoExigencia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DocumentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PacoteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Titular")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PacoteId");

                    b.ToTable("PacotesDocumentacao");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.PacoteAggregate.Materia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CargaHoraria")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MateriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Modalidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PacoteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PacoteId");

                    b.ToTable("PacotesMaterias");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.PacoteAggregate.Pacote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DuracaoMeses")
                        .HasColumnType("int");

                    b.Property<decimal>("Preco")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.Property<int>("TotalHoras")
                        .HasColumnType("int");

                    b.Property<Guid>("TypePacoteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Pacotes");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.Parametros.ParametrosKey", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ParametrosKey");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.Parametros.ParametrosValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ParametrosKeyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ParametrosKeyId");

                    b.ToTable("ParametrosValue");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.ProfessorAggregate.Disponibilidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Domingo")
                        .HasColumnType("bit");

                    b.Property<Guid>("PessoaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Quarta")
                        .HasColumnType("bit");

                    b.Property<bool>("Quinta")
                        .HasColumnType("bit");

                    b.Property<bool>("Sabado")
                        .HasColumnType("bit");

                    b.Property<bool>("Segunda")
                        .HasColumnType("bit");

                    b.Property<bool>("Sexta")
                        .HasColumnType("bit");

                    b.Property<bool>("Terca")
                        .HasColumnType("bit");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ProfessoresDisponibilidades");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.ProfessorAggregate.MateriaHabilitada", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MateriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProfessorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorId");

                    b.ToTable("ProfessoresMaterias");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.ProfessorAggregate.Professor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(12)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Professores");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.UnidadeAggregate.Sala", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("Capacidade")
                        .HasColumnType("int");

                    b.Property<string>("Comentarios")
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Descricao");

                    b.HasIndex("UnidadeId");

                    b.ToTable("UnidadesSalas");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.UnidadeAggregate.Unidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CNPJ")
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Sigla")
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("Id");

                    b.HasIndex("Sigla");

                    b.ToTable("Unidades");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.UnidadeAuth.Autorizacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Unidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Autorizacoes");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.ColaboradorAggregate.Colaborador", b =>
                {
                    b.OwnsOne("Invictus.Domain.Administrativo.ColaboradorAggregate.ColaboradorEndereco", "Endereco", b1 =>
                        {
                            b1.Property<Guid>("ColaboradorId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Bairro")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Bairro");

                            b1.Property<string>("CEP")
                                .HasColumnType("nvarchar(8)")
                                .HasColumnName("CEP");

                            b1.Property<string>("Cidade")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Cidade");

                            b1.Property<string>("Complemento")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Complemento");

                            b1.Property<string>("Logradouro")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Logradouro");

                            b1.Property<string>("Numero")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Numero");

                            b1.Property<string>("UF")
                                .HasColumnType("nvarchar(2)")
                                .HasColumnName("UF");

                            b1.HasKey("ColaboradorId");

                            b1.ToTable("Colaboradores");

                            b1.WithOwner()
                                .HasForeignKey("ColaboradorId");
                        });

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.ContratoAggregate.Conteudo", b =>
                {
                    b.HasOne("Invictus.Domain.Administrativo.ContratosAggregate.Contrato", "Contrato")
                        .WithMany("Conteudos")
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contrato");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.PacoteAggregate.DocumentacaoExigencia", b =>
                {
                    b.HasOne("Invictus.Domain.Administrativo.PacoteAggregate.Pacote", "Pacote")
                        .WithMany("DocumentosExigidos")
                        .HasForeignKey("PacoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pacote");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.PacoteAggregate.Materia", b =>
                {
                    b.HasOne("Invictus.Domain.Administrativo.PacoteAggregate.Pacote", "Pacote")
                        .WithMany("Materias")
                        .HasForeignKey("PacoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pacote");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.Parametros.ParametrosValue", b =>
                {
                    b.HasOne("Invictus.Domain.Administrativo.Parametros.ParametrosKey", "ParametrosKey")
                        .WithMany("ParametrosValue")
                        .HasForeignKey("ParametrosKeyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParametrosKey");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.ProfessorAggregate.MateriaHabilitada", b =>
                {
                    b.HasOne("Invictus.Domain.Administrativo.ProfessorAggregate.Professor", "Professor")
                        .WithMany("Materias")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.ProfessorAggregate.Professor", b =>
                {
                    b.OwnsOne("Invictus.Domain.Administrativo.ProfessorAggregate.DadosBancarios", "DadosBancarios", b1 =>
                        {
                            b1.Property<Guid>("ProfessorId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Agencia")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Agencia");

                            b1.Property<string>("BancoNumero")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("BancoNumero");

                            b1.Property<string>("Conta")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Conta");

                            b1.Property<string>("TipoConta")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("TipoConta");

                            b1.HasKey("ProfessorId");

                            b1.ToTable("Professores");

                            b1.WithOwner()
                                .HasForeignKey("ProfessorId");
                        });

                    b.OwnsOne("Invictus.Domain.Administrativo.ProfessorAggregate.ProfessorEndereco", "Endereco", b1 =>
                        {
                            b1.Property<Guid>("ProfessorId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Bairro")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Bairro");

                            b1.Property<string>("CEP")
                                .HasColumnType("nvarchar(8)")
                                .HasColumnName("CEP");

                            b1.Property<string>("Cidade")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Cidade");

                            b1.Property<string>("Complemento")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Complemento");

                            b1.Property<string>("Logradouro")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Logradouro");

                            b1.Property<string>("Numero")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Numero");

                            b1.Property<string>("UF")
                                .HasColumnType("nvarchar(2)")
                                .HasColumnName("UF");

                            b1.HasKey("ProfessorId");

                            b1.ToTable("Professores");

                            b1.WithOwner()
                                .HasForeignKey("ProfessorId");
                        });

                    b.Navigation("DadosBancarios");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.UnidadeAggregate.Sala", b =>
                {
                    b.HasOne("Invictus.Domain.Administrativo.UnidadeAggregate.Unidade", "Unidade")
                        .WithMany("Salas")
                        .HasForeignKey("UnidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unidade");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.UnidadeAggregate.Unidade", b =>
                {
                    b.OwnsOne("Invictus.Domain.Administrativo.UnidadeAggregate.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<Guid>("UnidadeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Bairro")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Bairro");

                            b1.Property<string>("CEP")
                                .HasColumnType("nvarchar(8)")
                                .HasColumnName("CEP");

                            b1.Property<string>("Cidade")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Cidade");

                            b1.Property<string>("Complemento")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Complemento");

                            b1.Property<string>("Logradouro")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Logradouro");

                            b1.Property<string>("Numero")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Numero");

                            b1.Property<string>("UF")
                                .HasColumnType("nvarchar(2)")
                                .HasColumnName("UF");

                            b1.HasKey("UnidadeId");

                            b1.ToTable("Unidades");

                            b1.WithOwner()
                                .HasForeignKey("UnidadeId");
                        });

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.ContratosAggregate.Contrato", b =>
                {
                    b.Navigation("Conteudos");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.PacoteAggregate.Pacote", b =>
                {
                    b.Navigation("DocumentosExigidos");

                    b.Navigation("Materias");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.Parametros.ParametrosKey", b =>
                {
                    b.Navigation("ParametrosValue");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.ProfessorAggregate.Professor", b =>
                {
                    b.Navigation("Materias");
                });

            modelBuilder.Entity("Invictus.Domain.Administrativo.UnidadeAggregate.Unidade", b =>
                {
                    b.Navigation("Salas");
                });
#pragma warning restore 612, 618
        }
    }
}
